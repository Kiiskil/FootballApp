@page "/"

@using FootballApp.Data
@using FootballApp.Models

@inject NavigationManager NavigationManager
@inject FootballMatchService FootballService

<h1>Football Matches</h1>

@if (matchlist == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <input placeholder="Search" @bind="SearchText"/>
    <button @onclick="Search">Search</button>

    <table class=" table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Date</th>
                <th>HomeTeam</th>
                <th>Score</th>
                <th>AwayTeam</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Match match in matchlist)
            {
                <tr @onclick="(()=> GetMatch(match))">
                    <td>@Matchlist.Matches.IndexOf(match)</td>
                    <td>@match.MatchDate</td>
                    <td>@match.HomeTeam.Name</td>
                    <td>@match.HomeGoals - @match.AwayGoals</td>
                    <td>@match.AwayTeam.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public int MatchID { get; set; }
    public string SearchText;
    public List<Match> matchlist = new List<Match>();

    protected override async Task OnInitializedAsync()
    {
        Matchlist.Matches = await FootballMatchService.DownloadSerializesJsonData<List<Match>>();
        if(Matchlist.Matches != null)
        {
            foreach(Match match in Matchlist.Matches)
            {
                matchlist.Add(match);
            }
        }
    }

    private void GetMatch(FootballApp.Models.Match match)
    {
        //Add routing to singlematch page
        MatchID = match.Id;
        NavigationManager.NavigateTo("/single/" + MatchID);
    }
    //TODO: add a filter for the match list using a single textbox
    private void Search()
    {
        if (!string.IsNullOrWhiteSpace(SearchText))
        {
            SearchText = SearchText.ToLower();
            foreach(Match match in Matchlist.Matches)
            {
                matchlist.Add(match);
            }
            foreach(Match match in matchlist.ToList())
            {
                if(!match.HomeTeam.Name.ToLower().Contains(SearchText) & !match.AwayTeam.Name.ToLower().Contains(SearchText))
                {
                    matchlist.Remove(match);
                }
            }
        }
        else
        {
            foreach(Match match in Matchlist.Matches)
            {
                matchlist.Add(match);
            }
        }
    }
}